image: openjdk:11-jdk

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS: "7583922"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  - mkdir -p /tmp/sdk/
  - mkdir -p /android-sdk-linux/cmdline-tools/latest
  - unzip -d /tmp/sdk android-sdk.zip
  - cp -a /tmp/sdk/cmdline-tools/. /android-sdk-linux/cmdline-tools/latest
  - ls /android-sdk-linux/cmdline-tools/latest/bin
  #- mkdir android-sdk-linux/cmdline-tools
  - echo y | /android-sdk-linux/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  #- echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | /android-sdk-linux/cmdline-tools/latest/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  #- export ANDROID_HOME=$PWD/android-sdk-linux
  - export ANDROID_SDK_ROOT=/android-sdk-linux/
  - export PATH=$PATH:/android-sdk-linux/cmdline-tools/latest/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - build
  - test

lintDebug:
  stage: build
  script:
    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

assembleDebug:
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/
      - app-koin/build/outputs/

debugTests:
  stage: test
  script:
    - ./gradlew -Pci --console=plain testDebug
  artifacts:
    name: "reports_${CI_PROJECT_NAME}_${CI_BUILD_REF_NAME}"
    when: always
    expire_in: 4 days
    paths:
      - app/build/reports/tests/
      - app-koin/build/reports/tests/