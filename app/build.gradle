plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}


android {
    compileSdk 31

    defaultConfig {
        applicationId "fr.pitdev.dayoff"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            //testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.all { unitTest ->
            if (name == "testReleaseUnitTest") {
                kover {
                    enabled = false
                }
            }
            if (name == "testDebugUnitTest") {
                kover {
                    enabled = true
                    binaryReportFile.set(file("$buildDir/kover/debug-report.bin"))
                    includes = [ 'fr\\.pidev\\.dayoff\\..*' ]
                    excludes = [
                            "**Hilt*.class",
                            "android/databinding/**/*.class",
                                "**/android/databinding/*Binding.class",
                                "**/android/databinding/*",
                                "**/androidx/databinding/*",
                                "**/BR.*",
                                // android
                                "**/R.class",
                                "**/R\$*.class",
                                "**/BuildConfig.*",
                                "**/Manifest*.*",
                                "**/*Test*.*",
                                "android/**/*.*",
                                // butterKnife
                                "**/*\$ViewInjector*.*",
                                "**/*\$ViewBinder*.*",
                                // dagger
                                "**/*_MembersInjector.class",
                                "**/Dagger*Component.class",
                                "**/Dagger*Component\$Builder.class",
                                "**/*Module_*Factory.class",
                                "**/di/module/*",
                                "**/*_Factory*.*",
                                "**/*Module*.*",
                                "**/*Dagger*.*",
                                "**/*Hilt*.*",
                                // kotlin
                                "**/*MapperImpl*.*",
                                "**/*\$ViewInjector*.*",
                                "**/*\$ViewBinder*.*",
                                "**/BuildConfig.*",
                                "**/*Component*.*",
                                "**/*BR*.*",
                                "**/Manifest*.*",
                                "**/*\$Lambda\$*.*",
                                "**/*Companion*.*",
                                "**/*Module*.*",
                                "**/*Dagger*.*",
                                "**/*Hilt*.*",
                                "**/*MembersInjector*.*",
                                "**/*_MembersInjector.class",
                                "**/*_Factory*.*",
                                "**/*_Provide*Factory*.*",
                                "**/*Extensions*.*",
                                // sealed and data classes
                                "**/*\$Result.*",
                                "**/*\$Result\$*.*"]
                }
            }
        }
    }
    dynamicFeatures = [':features:dayofffeature']
}

dependencies {
    implementation project (":core")
    implementation project (":common")
    implementation project (":navigation")
    implementation project (":presentation")


    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    def nav_version = "2.3.5"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.google.android.material:material:1.4.0'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")
    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")




    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

}

kover {
    enabled = true                          // false to disable instrumentation of all test tasks in all modules
    coverageEngine.set(kotlinx.kover.api.CoverageEngine.JACOCO) // change instrumentation agent and reporter
    intellijEngineVersion.set('1.0.614')    // change version of IntelliJ agent and reporter
    jacocoEngineVersion.set('0.8.7')        // change version of JaCoCo agent and reporter
    generateReportOnCheck.set(true)         // false to do not execute `koverReport` task before `check` task
}


