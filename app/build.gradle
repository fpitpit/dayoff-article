plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}
//apply from: '../kover.gradle'
apply from: "$project.rootDir/jacoco.gradle"

android {
    compileSdk 31

    defaultConfig {
        applicationId "fr.pitdev.dayoff"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "fr.pitdev.dayoff.HiltCustomTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    signingConfigs {
        release {
            if (System.getenv("CI")) { // CI=true is exported by Codemagic
                storePassword System.getenv("CM_KEYSTORE_PASSWORD")
                keyAlias System.getenv("CM_KEY_ALIAS")
                keyPassword System.getenv("CM_KEY_PASSWORD")
                storeFile file(rootProject.projectDir.absolutePath + "/dayoff.keystore")
            } else {
                if (rootProject.hasProperty("storeFile")) {
                    def keyStoreFile = file(System.getProperty('user.home') + rootProject.property("storeFile"))
                    keyAlias rootProject.property("keyAlias")
                    keyPassword rootProject.property("keyPassword")
                    storeFile keyStoreFile.exists() ? keyStoreFile : null
                    storePassword rootProject.property("storePassword")
                }
            }
        }
    }

    buildTypes {
        debug {
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    lint {
        // Turns off checks for the issue IDs you specify.
        //disable 'TypographyFractions','TypographyQuotes'
        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        //enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        //checkOnly 'NewApi', 'InlinedApi'
        // If set to true, turns off analysis progress reporting by lint.
        //quiet true
        // If set to true (default), stops the build if errors are found.
        abortOnError false
        // If true, only report errors.
        //ignoreWarnings true
        // If true, lint also checks all dependencies as part of its analysis. Recommended for
        // projects consisting of an app with library dependencies.
        checkDependencies true
    }
    kapt {
        correctErrorTypes true
    }
    hilt {
        enableAggregatingTask = true
    }
    dynamicFeatures = [':features:dayofffeature']
    namespace 'fr.pitdev.dayoff'
}

dependencies {
    implementation project(":core")

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'

    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'


    // Kotlin
    implementation("androidx.navigation:navigation-fragment-ktx:2.4.2")
    implementation("androidx.navigation:navigation-ui-ktx:2.4.2")
    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:2.4.2")


    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.6.1'

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt 'com.google.dagger:hilt-compiler:2.42'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.dagger:hilt-android-testing:2.42'
    kaptTest 'com.google.dagger:hilt-compiler:2.42'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.42'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.42'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.42'
    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:2.4.2")

}


